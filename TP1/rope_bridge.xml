<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.
int[0,3] lantern = 0; // who has the lantern
int lanternSide = 0; //0 - left; 1 - right
chan crossL;
chan crossNoL;
chan crossedL;
chan crossedNoL;
chan readyLantern;
chan readyNoLantern;

int etaL;
int etaNoL;
bool crossingL = false;
bool crossingNoL = false;
bool readyL = false;
bool readyNoL = false;

clock t;
clock global;</declaration><template><name x="8" y="8">Adventurer</name><parameter>int id, int eta</parameter><declaration>// Place local declarations here.</declaration><location id="id0" x="80" y="16"></location><location id="id1" x="216" y="32"></location><location id="id2" x="48" y="-184"></location><location id="id3" x="192" y="-152"><name x="184" y="-192">crossing</name><label kind="invariant" x="176" y="-184">t &lt;= (etaL &gt; etaNoL ? etaL : etaNoL)</label></location><location id="id4" x="336" y="-32"><name x="344" y="-72">right</name></location><location id="id5" x="-72" y="16"><name x="-96" y="24">left</name></location><init ref="id5"/><transition><source ref="id4"/><target ref="id4"/><label kind="guard" x="276" y="-62">lanternSide == 1 &amp;&amp; lantern != id
&amp;&amp; !crossingL &amp;&amp; !crossingNoL
&amp;&amp; !readyL &amp;&amp; !readyNoL</label><label kind="assignment" x="276" y="-32">lantern = id</label><nail x="440" y="-72"/><nail x="408" y="56"/></transition><transition><source ref="id5"/><target ref="id5"/><label kind="guard" x="-132" y="-14">lanternSide == 0 &amp;&amp; lantern != id
&amp;&amp; !crossingL &amp;&amp; !crossingNoL
&amp;&amp; !readyL &amp;&amp; !readyNoL</label><label kind="assignment" x="-216" y="56">lantern = id</label><nail x="-176" y="-48"/><nail x="-128" y="104"/></transition><transition><source ref="id0"/><target ref="id5"/><label kind="guard" x="-96" y="72">t &gt;= (etaL &gt; etaNoL ? etaL : etaNoL) &amp;&amp; lantern == id</label><label kind="synchronisation" x="-56" y="1">crossedL!</label><label kind="assignment" x="-56" y="56">crossingL = false, lanternSide = 0, readyL = false</label><nail x="8" y="72"/></transition><transition><source ref="id3"/><target ref="id4"/><label kind="guard" x="204" y="-122">t &gt;= (etaL &gt; etaNoL ? etaL : etaNoL) &amp;&amp; crossingNoL == true &amp;&amp; lantern != id</label><label kind="synchronisation" x="204" y="-107">crossedNoL!</label><label kind="assignment" x="208" y="-96">crossingNoL = false, readyNoL = false</label><nail x="320" y="-104"/></transition><transition><source ref="id1"/><target ref="id0"/><label kind="guard" x="160" y="56">t == 0 &amp;&amp; lantern != id</label><label kind="synchronisation" x="104" y="64">crossNoL!</label><label kind="assignment" x="84" y="8">t = 0, crossingNoL = true</label><nail x="144" y="56"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="88" y="-152">t == 0 &amp;&amp; lantern != id</label><label kind="synchronisation" x="84" y="-114">crossNoL!</label><label kind="assignment" x="92" y="-138">t = 0, crossingNoL = true</label><nail x="108" y="-114"/></transition><transition><source ref="id0"/><target ref="id5"/><label kind="guard" x="-64" y="-8">t &gt;= (etaL &gt; etaNoL ? etaL : etaNoL) &amp;&amp; lantern != id</label><label kind="synchronisation" x="-56" y="1">crossedNoL!</label><label kind="assignment" x="-56" y="16">crossingNoL = false, readyNoL = false</label></transition><transition><source ref="id1"/><target ref="id0"/><label kind="guard" x="136" y="-24">t==0 &amp;&amp; lantern == id</label><label kind="synchronisation" x="120" y="-8">crossL!</label><label kind="assignment" x="84" y="8">t=0, crossingL = true</label></transition><transition><source ref="id4"/><target ref="id1"/><label kind="guard" x="216" y="-30">!crossingL &amp;&amp; !crossingNoL &amp;&amp; lantern == id</label><label kind="synchronisation" x="176" y="-72">readyLantern!</label><label kind="assignment" x="136" y="-48">etaL = eta, etaNoL = 0, t = 0, readyL = true</label><nail x="240" y="-48"/></transition><transition><source ref="id4"/><target ref="id1"/><label kind="guard" x="264" y="8">!crossingL &amp;&amp; !crossingNoL &amp;&amp; lanternSide == 1</label><label kind="synchronisation" x="248" y="48">readyNoLantern!</label><label kind="assignment" x="280" y="24">etaNoL = eta, t = 0, readyNoL = true</label><nail x="304" y="32"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="144" y="-232">t == 0 &amp;&amp; lantern == id</label><label kind="synchronisation" x="88" y="-216">crossL!</label><label kind="assignment" x="152" y="-216">t = 0, crossingL=true</label><nail x="112" y="-192"/></transition><transition><source ref="id5"/><target ref="id2"/><label kind="guard" x="-72" y="-114">lanternSide == 0</label><label kind="synchronisation" x="-24" y="-120">readyNoLantern!</label><label kind="assignment" x="-48" y="-64">etaNoL = eta, t = 0, readyNoL = true</label><nail x="32" y="-56"/></transition><transition><source ref="id5"/><target ref="id2"/><label kind="guard" x="-144" y="-136">lantern == id</label><label kind="synchronisation" x="-120" y="-160">readyLantern!</label><label kind="assignment" x="-184" y="-96">etaL = eta, etaNoL = 0, t = 0, readyL = true</label><nail x="-48" y="-112"/></transition><transition><source ref="id3"/><target ref="id4"/><label kind="guard" x="344" y="-136">t &gt;= (etaL &gt; etaNoL ? etaL : etaNoL) &amp;&amp; crossingL == true &amp;&amp; lantern == id</label><label kind="synchronisation" x="204" y="-107">crossedL!</label><label kind="assignment" x="392" y="-168">crossingL = false, lanternSide = 1, readyL = false</label><nail x="396" y="-138"/></transition></template><template><name>Bridge</name><location id="id6" x="16" y="112"></location><location id="id7" x="96" y="160"></location><location id="id8" x="104" y="72"></location><location id="id9" x="-64" y="72"></location><location id="id10" x="-64" y="152"></location><location id="id11" x="-64" y="-104"></location><location id="id12" x="200" y="72"></location><location id="id13" x="32" y="-64"></location><location id="id14" x="-192" y="32"></location><init ref="id14"/><transition><source ref="id6"/><target ref="id10"/><label kind="synchronisation" x="-84" y="117">crossedNoL?</label></transition><transition><source ref="id6"/><target ref="id9"/><label kind="synchronisation" x="-48" y="72">crossedL?</label></transition><transition><source ref="id8"/><target ref="id6"/><label kind="synchronisation" x="8" y="64">crossNoL?</label></transition><transition><source ref="id7"/><target ref="id6"/><label kind="synchronisation" x="24" y="144">crossL?</label></transition><transition><source ref="id12"/><target ref="id7"/><label kind="synchronisation" x="120" y="120">crossNoL?</label></transition><transition><source ref="id12"/><target ref="id8"/><label kind="synchronisation" x="128" y="56">crossL?</label></transition><transition><source ref="id10"/><target ref="id14"/><label kind="synchronisation" x="-192" y="112">crossedL?</label></transition><transition><source ref="id9"/><target ref="id14"/><label kind="synchronisation" x="-152" y="32">crossedNoL?</label></transition><transition><source ref="id11"/><target ref="id14"/><label kind="synchronisation" x="-184" y="-64">crossedL?</label></transition><transition><source ref="id13"/><target ref="id11"/><label kind="synchronisation" x="-32" y="-112">crossL?</label></transition><transition><source ref="id13"/><target ref="id12"/><label kind="synchronisation" x="40" y="16">readyNoLantern?</label></transition><transition><source ref="id14"/><target ref="id13"/><label kind="synchronisation" x="-96" y="-16">readyLantern?</label></transition></template><system>// Place template instantiations here.
AdventurerProcess1 = Adventurer(0, 1);
AdventurerProcess2 = Adventurer(1, 2);
AdventurerProcess3 = Adventurer(2, 5);
AdventurerProcess4 = Adventurer(3, 10);

BridgeProcess = Bridge();

// List one or more processes to be composed into a system.
system AdventurerProcess1,
       AdventurerProcess2,
       AdventurerProcess3,
       AdventurerProcess4,
       BridgeProcess;</system></nta>